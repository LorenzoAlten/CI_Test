<UserControl x:Class="AgvMgr.Views.MissionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:resx="clr-namespace:mSwDllWPFUtils;assembly=mSwDllWPFUtils"
             xmlns:converters="clr-namespace:mSwDllWPFUtils.Converters;assembly=mSwDllWPFUtils"
             xmlns:agilog="clr-namespace:mSwAgilogDll;assembly=mSwAgilogDll"
             xmlns:cal="http://www.caliburnproject.org"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal" 
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <resx:DecimalConverter x:Key="DecimalConverter" Decimals="3"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter" 
                                                     True="Collapsed" 
                                                     False="Visible" />
            <agilog:MissionTypeConverter x:Key="MissionTypeConverter"/>
            <agilog:MissionResultConverter x:Key="MissionResultConverter"/>
            <agilog:MissionCausalConverter x:Key="MissionCausalConverter"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedLightButton}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Height" Value="60"/>
                <Setter Property="Width" Value="75"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>
            <Style TargetType="materialDesign:PackIcon">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Height" Value="24" />
                <Setter Property="Width" Value="24" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding MIS_L1_MST_Code}" Value="ERR">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Background" Value="Red"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
                <Setter Property="Margin" Value="0" />
            </Style>
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MaterialDesignCardGroupBox}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>
            <Style x:Key="ToolButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignToolForegroundButton}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Height" Value="50"/>
                <Setter Property="Width" Value="50"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>
            <Style x:Key="DecimalStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <GroupBox Grid.Row="0" Padding="0" Margin="12 4" MinHeight="150"
                          Header="{resx:Translate Missions, Uppercase=True}"
                          materialDesign:ColorZoneAssist.Mode="Accent">
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <TextBlock Margin="8" VerticalAlignment="Center" 
                                       Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                                       Text="{Binding}" />
                </DataTemplate>
            </GroupBox.HeaderTemplate>
            <DockPanel>
                <materialDesign:ColorZone Mode="PrimaryLight" DockPanel.Dock="Bottom">
                    <materialDesign:ColorZone.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignToolForegroundButton}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </materialDesign:ColorZone.Resources>
                    <Button Name="RefreshAll" HorizontalAlignment="Right"
                            ToolTip="{resx:Translate 'Refresh'}">
                        <materialDesign:PackIcon Kind="Refresh" />
                    </Button>
                </materialDesign:ColorZone>

                <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}"
                                         DockPanel.Dock="Bottom"
                                         resx:SnackBarCustomProperties.SnackBarNotification="{Binding SnackBarMessage}"/>

                <DataGrid Name="MissionsList" VerticalAlignment="Stretch" SelectionUnit="FullRow" SelectionMode="Single" Grid.Row="1"
                                  SelectedItem="{Binding SelectedMission}" VerticalScrollBarVisibility="Auto"
                                  AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                                  materialDesign:DataGridAssist.CellPadding="12 8 8 8" 
                                  materialDesign:DataGridAssist.ColumnHeaderPadding="12 4"
                                  cal:Message.Attach="[Event MouseDoubleClick] = [Action MissionMouseDoubleClick()]">
                    <DataGrid.Resources>
                        <ContextMenu x:Key="RowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="{resx:Translate 'Load unit details'}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.RowDetailsCommand}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="PackageVariantClosed" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{resx:Translate 'Retry command'}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.RowRetryCommand}"
                                              Visibility="{Binding CanStcRetry, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="UndoVariant" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{resx:Translate Abort}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.RowAbortCommand}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="DeleteForeverOutline" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{resx:Translate Complete mission}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.RowCompleteCommand}"
                                              Visibility="{Binding CanStcComplete, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="CheckboxMultipleMarkedOutline" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{resx:Translate Abort}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.RowAbortHndCommand}"
                                              Visibility="{Binding CanActionHnd, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="DeleteForeverOutline" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{resx:Translate Evacuate}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.RowEvacuateCommand}"
                                              Visibility="{Binding CanActionHnd, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Export" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.Resources>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{resx:Translate 'ID', Uppercase=True}" 
                                                    Binding="{Binding MIS_Id}"
                                                    IsReadOnly="True" MinWidth="100"/>
                        <DataGridTextColumn Header="{resx:Translate 'Load unit', Uppercase=True}" 
                                                    Binding="{Binding MIS_UDC_Code}"
                                                    IsReadOnly="True" MinWidth="100"/>
                        <DataGridTextColumn Header="{resx:Translate 'State 1', Uppercase=True}" 
                                            Binding="{Binding MIS_L1_MST_Desc}"
                                            IsReadOnly="True" MinWidth="100"/>
                        <DataGridTextColumn Header="{resx:Translate 'State 2', Uppercase=True}" 
                                            Binding="{Binding MIS_L2_MST_Desc}"
                                            IsReadOnly="True" MinWidth="100"/>
                        <DataGridTextColumn Header="{resx:Translate 'Causal', Uppercase=True}" 
                                                    Binding="{Binding MIS_CAU_Code, Converter={StaticResource MissionCausalConverter}}"
                                                    IsReadOnly="True" MinWidth="100"/>
                        <DataGridTextColumn Header="{resx:Translate 'Source', Uppercase=True}" 
                                                    Binding="{Binding MIS_Source}"
                                                    IsReadOnly="True" MinWidth="100"/>
                        <DataGridTextColumn Header="{resx:Translate 'Destination', Uppercase=True}" 
                                                    Binding="{Binding MIS_Dest}"
                                                    IsReadOnly="True" MinWidth="100"/>
                        <DataGridTextColumn Header="{resx:Translate 'Priority', Uppercase=True}" 
                                                    Binding="{Binding MIS_Priority}"
                                                    IsReadOnly="True" MinWidth="100"/>
                        <DataGridTextColumn Header="{resx:Translate 'Agv', Uppercase=True}" 
                                                    Binding="{Binding Agv}"
                                                    IsReadOnly="True" MinWidth="100"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>

        <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                     Value="0" Width="40" Height="40" Background="White" Opacity="0.7"
                     VerticalAlignment="Center" HorizontalAlignment="Center"
                     IsIndeterminate="True"
                     Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>
