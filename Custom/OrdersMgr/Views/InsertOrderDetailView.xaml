<UserControl x:Class="OrdersMgr.Views.InsertOrderDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OrdersMgr.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:resx="clr-namespace:mSwDllWPFUtils;assembly=mSwDllWPFUtils"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:converters="clr-namespace:mSwDllWPFUtils.Converters;assembly=mSwDllWPFUtils"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal" 
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter" 
                                                     True="Collapsed" 
                                                     False="Visible" />
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="MinHeight" Value="35"/>
                <Setter Property="Margin" Value="0 15 0 0" />
                <Setter Property="FontSize" Value="15" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="MinHeight" Value="35"/>
                <Setter Property="MinWidth" Value="200"/>
                <Setter Property="Margin" Value="0 15 0 0" />
                <Setter Property="FontSize" Value="15" />
            </Style>
            <Style TargetType="resx:AutoCompleteTextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="MinHeight" Value="35"/>
                <Setter Property="Margin" Value="0 15 0 0" />
                <Setter Property="FontSize" Value="15" />
            </Style>
            
            <resx:DecimalConverter x:Key="decimalConverter" Decimals="3"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <DockPanel Visibility="{Binding IsLoading, Converter={StaticResource InvertBooleanToVisibilityConverter}}">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom"
                    HorizontalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                        <Setter Property="Margin" Value="4"/>
                    </Style>
                </StackPanel.Resources>

                <Button Name="Save" Style="{StaticResource MaterialDesignRaisedAccentButton}"
                    Content="{resx:Translate 'Save', Uppercase=True}"/>

                <Button Name="Cancel"
                    Content="{resx:Translate 'Cancel', Uppercase=True}"/>
            </StackPanel>

            <ScrollViewer DockPanel.Dock="Top" VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="12 4">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <resx:AutoCompleteTextBox Grid.Column="0"
                                              cal:Message.Attach="[Event TextAutoCompleted] = [Action ItemCodeAutoCompleted($eventArgs)]"
                                              FilterMinLength="2" Dictionary="{Binding Path=Dictionary_ItemCodes}"
                                              Text="{Binding ITM_Code, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                                              materialDesign:HintAssist.Hint="{resx:Translate 'Item code'}"/>
                        <resx:AutoCompleteTextBox Grid.Column="1" Margin="10 0 0 0"
                                              cal:Message.Attach="[Event TextAutoCompleted] = [Action ItemDescriptionAutoCompleted($eventArgs)]"
                                              FilterMinLength="2" Dictionary="{Binding Path=Dictionary_ItemDescriptions}"
                                              Text="{Binding ITM_Desc, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                                              materialDesign:HintAssist.Hint="{resx:Translate 'Item description'}"/>
                    </Grid>

                    <resx:DecimalTextBox Grid.Row="1" Grid.Column="1" materialDesign:HintAssist.Hint="{resx:Translate 'Required quantity'}">
                        <TextBox.Text>
                            <resx:CultureAwareBinding Path="QtyR"
                                                      NotifyOnValidationError="True" ValidatesOnDataErrors="True" ValidatesOnExceptions="True"
                                                      Converter="{StaticResource decimalConverter}">
                            </resx:CultureAwareBinding>
                        </TextBox.Text>
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                
                            </Style>
                        </TextBox.Style>
                    </resx:DecimalTextBox>
                    
                    <ComboBox SelectedValue="{Binding UDC_Code, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                          ItemsSource="{Binding UdcList}" 
                          SelectedValuePath="UDC_Code" DisplayMemberPath="UDC_Code"
                          materialDesign:HintAssist.Hint="{resx:Translate UDC}"/>

                    <ComboBox SelectedValue="{Binding Priority, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                          ItemsSource="{Binding PriorityList, Mode=OneTime}" 
                          materialDesign:HintAssist.Hint="{resx:Translate Priority}"/>

                    <TextBox Text="{Binding Notes, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                         materialDesign:HintAssist.Hint="{resx:Translate Notes}"
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         VerticalScrollBarVisibility="Auto"
                         SpellCheck.IsEnabled="True"
                         HorizontalAlignment="Stretch"/>

                    <ComboBox SelectedValue="{Binding BAY_Num, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                          ItemsSource="{Binding BaysList}" 
                          SelectedValuePath="BAY_Num"
                          materialDesign:HintAssist.Hint="{resx:Translate Bay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                <Run Text="{Binding BAY_Num}"/>
                                <Run Text="-"/>
                                <Run Text="{Binding BAY_Desc}"/>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                </StackPanel>

            </ScrollViewer>
        </DockPanel>

        <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                     Value="0" Width="40" Height="40" Background="White" Opacity="0.7"
                     VerticalAlignment="Center" HorizontalAlignment="Center"
                     IsIndeterminate="True"
                     Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>
