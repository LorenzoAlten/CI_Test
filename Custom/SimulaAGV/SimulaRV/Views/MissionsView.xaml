<UserControl x:Class="HandlingMgr.Views.JobsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HandlingMgr"
             xmlns:converters="clr-namespace:HandlingMgr.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:resx="clr-namespace:mSwDllWPFUtils;assembly=mSwDllWPFUtils"
             xmlns:agilogconverters="clr-namespace:mSwDllWPFUtils.Converters;assembly=mSwDllWPFUtils"
             xmlns:agilog="clr-namespace:AgilogDll;assembly=AgilogDll"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <resx:DecimalConverter x:Key="DecimalConverter" Decimals="3"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <agilogconverters:BooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter" 
                                                     True="Collapsed" 
                                                     False="Visible" />
            <converters:FrequencyConverter x:Key="FrequencyConverter"/>
            <converters:JobStateConverter x:Key="JobStateConverter"/>
            <converters:LogLevelConverter x:Key="LogLevelConverter"/>
            <agilog:MissionPhaseConverter x:Key="MissionPhaseConverter"/>
            <agilog:OrderDetStatusConverter x:Key="OrderDetStatusConverter"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedLightButton}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Height" Value="60"/>
                <Setter Property="Width" Value="75"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>
            <Style TargetType="materialDesign:PackIcon">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Height" Value="24" />
                <Setter Property="Width" Value="24" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <DockPanel>
            <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2" Mode="PrimaryMid" DockPanel.Dock="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Name="DisplayName" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"/>

                    <Button x:Name="RefreshAll" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Grid.Column="1" Margin="16,0,0,0">
                        <materialDesign:PackIcon Kind="Refresh" Height="24" Width="24" />
                    </Button>
                </Grid>
            </materialDesign:ColorZone>
            

            <UniformGrid Rows="1" Columns="4" DockPanel.Dock="Top"
                     HorizontalAlignment="Left">
                <Button Name="Start">
                    <StackPanel>
                        <materialDesign:PackIcon Kind="Play" />
                        <TextBlock HorizontalAlignment="Center"
                               Text="{resx:Translate Start, Uppercase=True}"/>
                    </StackPanel>
                </Button>
                <Button Name="Stop">
                    <StackPanel>
                        <materialDesign:PackIcon Kind="Stop" />
                        <TextBlock HorizontalAlignment="Center"
                               Text="{resx:Translate Stop, Uppercase=True}"/>
                    </StackPanel>
                </Button>
                <Button Name="Enable">
                    <StackPanel>
                        <materialDesign:PackIcon Kind="CheckboxMarkedOutline" />
                        <TextBlock HorizontalAlignment="Center"
                               Text="{resx:Translate Enable, Uppercase=True}"/>
                    </StackPanel>
                </Button>
                <Button Name="Disable">
                    <StackPanel>
                        <materialDesign:PackIcon Kind="CheckboxBlankOutline" />
                        <TextBlock HorizontalAlignment="Center"
                               Text="{resx:Translate Disable, Uppercase=True}"/>
                    </StackPanel>
                </Button>
            </UniformGrid>

            <materialDesign:ColorZone Mode="PrimaryLight" VerticalAlignment="Stretch" DockPanel.Dock="Right"/>

            <Grid VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Padding="8" Margin="4 4 4 0" VerticalAlignment="Stretch"
                              Header="{resx:Translate Jobs, Uppercase=True}"
                              Style="{DynamicResource MaterialDesignGroupBox}"
                              materialDesign:ColorZoneAssist.Mode="Accent">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontWeight="Bold"
                                           Text="{Binding}" />
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1">
                        <DataGrid Name="JobsList" VerticalAlignment="Stretch" SelectionUnit="FullRow" SelectionMode="Single"
                                  SelectedItem="{Binding SelectedJob, Mode=TwoWay}"
                                  AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                                  materialDesign:DataGridAssist.CellPadding="12 8 8 8" 
                                  materialDesign:DataGridAssist.ColumnHeaderPadding="4">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{resx:Translate 'Job', Uppercase=True}" 
                                                        Binding="{Binding Desc}"
                                                        IsReadOnly="True" Width="Auto" MinWidth="300"/>
                                <DataGridTextColumn Header="{resx:Translate 'Frequency', Uppercase=True}" 
                                                        Binding="{Binding Frequency, Converter={StaticResource FrequencyConverter}}"
                                                        IsReadOnly="True" Width="Auto" MinWidth="100"/>
                                <DataGridTextColumn Header="{resx:Translate 'State', Uppercase=True}" 
                                                        Binding="{Binding State, Converter={StaticResource JobStateConverter}}"
                                                        IsReadOnly="True" Width="Auto" MinWidth="100"/>
                                <DataGridCheckBoxColumn Header="{resx:Translate 'Enabled', Uppercase=True}" 
                                                        Binding="{Binding Enabled, Mode=OneWay}"
                                                        IsReadOnly="True" Width="Auto" MinWidth="100"/>
                                <DataGridTextColumn Header="{resx:Translate 'Last execution', Uppercase=True}" 
                                                        Binding="{Binding LastExecution}"
                                                        IsReadOnly="True" Width="Auto" MinWidth="100"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>
                </GroupBox>

                <GridSplitter Grid.Row="1" Height="50" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0 -15">
                    <GridSplitter.Template>
                        <ControlTemplate TargetType="{x:Type GridSplitter}">
                            <materialDesign:PackIcon Kind="DragHorizontal" />
                        </ControlTemplate>
                    </GridSplitter.Template>
                </GridSplitter>

                <GroupBox Grid.Row="2" Padding="8" Margin="4 4 4 0" VerticalAlignment="Stretch"
                              Header="{resx:Translate Logs, Uppercase=True}"
                              Style="{DynamicResource MaterialDesignGroupBox}"
                              materialDesign:ColorZoneAssist.Mode="Accent">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontWeight="Bold"
                                           Text="{Binding}" />
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1" VerticalAlignment="Stretch">
                        <DataGrid Name="JobLogs" VerticalAlignment="Stretch"
                                  AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                                  materialDesign:DataGridAssist.CellPadding="12 8 8 8" 
                                  materialDesign:DataGridAssist.ColumnHeaderPadding="4">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{resx:Translate 'Date/Time', Uppercase=True}" 
                                            Binding="{Binding DateTime}"
                                            IsReadOnly="True" Width="Auto" MinWidth="100"/>
                                <DataGridTextColumn Header="{resx:Translate 'Message', Uppercase=True}"
                                            Binding="{Binding Message}"
                                            IsReadOnly="True" Width="*" MinWidth="300"/>
                                <DataGridTextColumn Header="{resx:Translate 'User', Uppercase=True}" 
                                            Binding="{Binding User}"
                                            IsReadOnly="True" Width="Auto" MinWidth="100"/>
                                <DataGridTextColumn Header="{resx:Translate 'Level', Uppercase=True}" 
                                            Binding="{Binding Level, Converter={StaticResource LogLevelConverter}}"
                                            IsReadOnly="True" Width="Auto" MinWidth="100"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>
                </GroupBox>

                <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}" Grid.RowSpan="3"
                                         resx:SnackBarCustomProperties.SnackBarNotification="{Binding SnackBarMessage}"/>
            </Grid>
        </DockPanel>

        <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                     Value="0" Width="40" Height="40" Background="White" Opacity="0.7"
                     VerticalAlignment="Center" HorizontalAlignment="Center"
                     IsIndeterminate="True"
                     Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>
